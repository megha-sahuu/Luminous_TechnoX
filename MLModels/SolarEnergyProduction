{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOrWFLBlluB14t+cV8qQ30H",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/megha-sahuu/Luminous_TechnoX/blob/main/MLModels/SolarEnergyProduction\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iFAexILYwZqf",
        "outputId": "c4ad8e27-a979-4af2-f876-facc19a5c13d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: pmdarima in /usr/local/lib/python3.10/dist-packages (2.0.4)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (1.4.2)\n",
            "Requirement already satisfied: Cython!=0.29.18,!=0.29.31,>=0.29 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (3.0.11)\n",
            "Requirement already satisfied: numpy>=1.21.2 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (1.26.4)\n",
            "Requirement already satisfied: pandas>=0.19 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (2.2.2)\n",
            "Requirement already satisfied: scikit-learn>=0.22 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (1.5.2)\n",
            "Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (1.13.1)\n",
            "Requirement already satisfied: statsmodels>=0.13.2 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (0.14.4)\n",
            "Requirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (2.2.3)\n",
            "Requirement already satisfied: setuptools!=50.0.0,>=38.6.0 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (75.1.0)\n",
            "Requirement already satisfied: packaging>=17.1 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (24.1)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.19->pmdarima) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.19->pmdarima) (2024.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.19->pmdarima) (2024.2)\n",
            "Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.22->pmdarima) (3.5.0)\n",
            "Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.10/dist-packages (from statsmodels>=0.13.2->pmdarima) (0.5.6)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.6->statsmodels>=0.13.2->pmdarima) (1.16.0)\n"
          ]
        }
      ],
      "source": [
        "!pip install pmdarima\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import joblib\n",
        "import matplotlib.pyplot as plt\n",
        "from pmdarima import auto_arima\n",
        "from sklearn.metrics import mean_absolute_error, mean_squared_error\n",
        "\n",
        "# Load the energy data\n",
        "energy_data = pd.read_csv('/content/Energy data.csv')\n",
        "\n",
        "# Preprocess the data\n",
        "energy_data['SendDate'] = pd.to_datetime(energy_data['SendDate'])\n",
        "energy_data.set_index('SendDate', inplace=True)\n",
        "energy_data['Solar energy Generation  (kWh)'] = energy_data['Solar energy Generation  (kWh)'].fillna(0)\n",
        "\n",
        "# Split data into train and test\n",
        "train_size = int(len(energy_data) * 0.8)\n",
        "train, test = energy_data['Solar energy Generation  (kWh)'][:train_size], energy_data['Solar energy Generation  (kWh)'][train_size:]\n",
        "\n",
        "# Use auto ARIMA to find optimal parameters\n",
        "model_arima = auto_arima(train, seasonal=False, stepwise=True)\n",
        "print(model_arima.summary())\n",
        "\n",
        "# Fit the ARIMA model with optimal parameters\n",
        "model_arima_fit = model_arima.fit(train)\n",
        "\n",
        "# Make predictions for the next 24 hours\n",
        "predictions = model_arima_fit.predict(n_periods=24)  # Use 'predict' instead of 'forecast'\n",
        "\n",
        "# Print predictions\n",
        "print(\"Forecasted Solar Energy:\", predictions)\n",
        "\n",
        "# Calculate and print error metrics if test data is available\n",
        "if len(test) > 0:\n",
        "    mae = mean_absolute_error(test[:24], predictions)  # Ensure comparison is valid\n",
        "    mse = mean_squared_error(test[:24], predictions)\n",
        "    rmse = mean_squared_error(test[:24], predictions, squared=False)\n",
        "\n",
        "    print(f\"Mean Absolute Error (MAE): {mae}\")\n",
        "    print(f\"Mean Squared Error (MSE): {mse}\")\n",
        "    print(f\"Root Mean Squared Error (RMSE): {rmse}\")\n",
        "\n",
        "# Save the model\n",
        "joblib.dump(model_arima_fit, 'model_arima.pkl')\n",
        "\n",
        "# Plot results\n",
        "plt.figure(figsize=(12, 6))\n",
        "plt.plot(train.index, train, label='Training Data', color='blue')\n",
        "plt.plot(test.index[:24], test[:24], label='Test Data', color='green')\n",
        "plt.plot(test.index[:24], predictions, label='Predictions', color='red')\n",
        "plt.title('ARIMA Model Predictions vs Actual Data')\n",
        "plt.xlabel('Date')\n",
        "plt.ylabel('Solar Energy Generation (kWh)')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "9TRDXD6Dy32J",
        "outputId": "752aff64-1851-4d68-c100-900e5a8673a9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                               SARIMAX Results                                \n",
            "==============================================================================\n",
            "Dep. Variable:                      y   No. Observations:                 4021\n",
            "Model:               SARIMAX(5, 1, 3)   Log Likelihood               -2521.915\n",
            "Date:                Thu, 24 Oct 2024   AIC                           5061.830\n",
            "Time:                        18:36:02   BIC                           5118.522\n",
            "Sample:                             0   HQIC                          5081.921\n",
            "                               - 4021                                         \n",
            "Covariance Type:                  opg                                         \n",
            "==============================================================================\n",
            "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
            "------------------------------------------------------------------------------\n",
            "ar.L1         -1.8256      0.023    -79.946      0.000      -1.870      -1.781\n",
            "ar.L2         -1.1288      0.049    -23.045      0.000      -1.225      -1.033\n",
            "ar.L3         -0.3779      0.048     -7.832      0.000      -0.472      -0.283\n",
            "ar.L4         -0.3384      0.027    -12.481      0.000      -0.392      -0.285\n",
            "ar.L5         -0.1287      0.010    -13.024      0.000      -0.148      -0.109\n",
            "ma.L1          1.2703      0.024     53.862      0.000       1.224       1.316\n",
            "ma.L2          0.0285      0.038      0.746      0.456      -0.046       0.103\n",
            "ma.L3         -0.4296      0.020    -21.299      0.000      -0.469      -0.390\n",
            "sigma2         0.2053      0.001    238.006      0.000       0.204       0.207\n",
            "===================================================================================\n",
            "Ljung-Box (L1) (Q):                   0.00   Jarque-Bera (JB):           1751407.32\n",
            "Prob(Q):                              0.97   Prob(JB):                         0.00\n",
            "Heteroskedasticity (H):               0.00   Skew:                            -6.35\n",
            "Prob(H) (two-sided):                  0.00   Kurtosis:                       104.46\n",
            "===================================================================================\n",
            "\n",
            "Warnings:\n",
            "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n",
            "  return get_prediction_index(\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n",
            "  return get_prediction_index(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_regression.py:492: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Forecasted Solar Energy: 4021   -1.841616e-07\n",
            "4022    1.841542e-07\n",
            "4023   -2.523860e-07\n",
            "4024    1.983772e-07\n",
            "4025   -2.086082e-07\n",
            "4026    8.956110e-08\n",
            "4027   -6.535419e-08\n",
            "4028   -6.170365e-08\n",
            "4029    7.355774e-08\n",
            "4030   -1.674893e-07\n",
            "4031    1.325544e-07\n",
            "4032   -1.755150e-07\n",
            "4033    9.303809e-08\n",
            "4034   -9.868431e-08\n",
            "4035   -5.936061e-09\n",
            "4036    5.329969e-09\n",
            "4037   -9.872573e-08\n",
            "4038    7.379628e-08\n",
            "4039   -1.346707e-07\n",
            "4040    7.472984e-08\n",
            "4041   -1.036546e-07\n",
            "4042    1.940634e-08\n",
            "4043   -3.466721e-08\n",
            "4044   -5.149642e-08\n",
            "dtype: float64\n",
            "Mean Absolute Error (MAE): 1.0781492978596053e-07\n",
            "Mean Squared Error (MSE): 1.6028480459391818e-14\n",
            "Root Mean Squared Error (RMSE): 1.2660363525346268e-07\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.patches as patches\n",
        "\n",
        "# Create a figure and axis\n",
        "fig, ax = plt.subplots(figsize=(12, 8))\n",
        "\n",
        "# Set the background color\n",
        "ax.set_facecolor('white')\n",
        "\n",
        "# Add the main boxes and text\n",
        "boxes = {\n",
        "    \"Data Layer\": (0.1, 0.8, 0.8, 0.1),\n",
        "    \"ML Models Layer\": (0.1, 0.6, 0.8, 0.1),\n",
        "    \"API Layer\": (0.1, 0.4, 0.8, 0.1),\n",
        "    \"Frontend Layer\": (0.1, 0.2, 0.8, 0.1)\n",
        "}\n",
        "\n",
        "# Add rectangles and text for each layer\n",
        "for layer, (x, y, width, height) in boxes.items():\n",
        "    rect = patches.Rectangle((x, y), width, height, linewidth=1, edgecolor='black', facecolor='lightgrey', alpha=0.7)\n",
        "    ax.add_patch(rect)\n",
        "    ax.text(x + width / 2, y + height / 2, layer, fontsize=12, ha='center', va='center')\n",
        "\n",
        "# Add model details in the ML Models Layer\n",
        "ml_models = [\n",
        "    \"1. Tariff Prediction (LSTM)\",\n",
        "    \"2. Energy Consumption (Random Forest)\",\n",
        "    \"3. Solar Production (ARIMA)\",\n",
        "    \"4. Smart Scheduling (Optimization)\",\n",
        "    \"5. Energy Management (Control System)\",\n",
        "    \"6. Recommendations (Collaborative Filtering)\",\n",
        "    \"7. Cost-Benefit Analysis (Simple Regression)\"\n",
        "]\n",
        "\n",
        "# Position for the ML Models Layer\n",
        "for i, model in enumerate(ml_models):\n",
        "    ax.text(0.5, 0.65 - i * 0.025, model, fontsize=10, ha='center', va='center')\n",
        "\n",
        "# Draw arrows between layers\n",
        "arrowprops = dict(facecolor='black', arrowstyle='->', linewidth=2)\n",
        "for i in range(len(boxes) - 1):\n",
        "    ax.annotate(\"\", xy=(0.5, 0.6 - i * 0.2), xytext=(0.5, 0.7 - i * 0.2), arrowprops=arrowprops)\n",
        "\n",
        "# Set limits and hide axes\n",
        "ax.set_xlim(0, 1)\n",
        "ax.set_ylim(0, 1)\n",
        "ax.axis('off')\n",
        "\n",
        "# Add a title\n",
        "plt.title(\"High Level Architecture Diagram\", fontsize=16)\n",
        "\n",
        "# Save the figure\n",
        "plt.savefig(\"high_level_architecture_diagram.png\", bbox_inches='tight')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 624
        },
        "id": "h6_TM6wo8ZfS",
        "outputId": "9a456ccd-6943-48ec-d5d4-e3ab53120090"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Root Mean Squared Error: 27.397981695915867\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Forecast for the next 24 hours\n",
        "forecast = model_arima_fit.forecast(steps=24)\n",
        "print(\"Forecasted Solar Energy:\", forecast)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6UoOpv3bw4bd",
        "outputId": "8709558f-6c29-45e0-a825-7f0ab464c2be"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Forecasted Solar Energy: 4040    0.0\n",
            "4041    0.0\n",
            "4042    0.0\n",
            "4043    0.0\n",
            "4044    0.0\n",
            "4045    0.0\n",
            "4046    0.0\n",
            "4047    0.0\n",
            "4048    0.0\n",
            "4049    0.0\n",
            "4050    0.0\n",
            "4051    0.0\n",
            "4052    0.0\n",
            "4053    0.0\n",
            "4054    0.0\n",
            "4055    0.0\n",
            "4056    0.0\n",
            "4057    0.0\n",
            "4058    0.0\n",
            "4059    0.0\n",
            "4060    0.0\n",
            "4061    0.0\n",
            "4062    0.0\n",
            "4063    0.0\n",
            "Name: predicted_mean, dtype: float64\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n",
            "  return get_prediction_index(\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n",
            "  return get_prediction_index(\n"
          ]
        }
      ]
    }
  ]
}